_STACK SEGMENT PARA STACK'_STACK'
DB 128 DUP(0)
_STACK ENDS

DATA SEGMENT 
Sno DB '22009200439 ZhaoYuyang',0AH,0DH,'$' 
string1 DB 0AH,0DH,'Convert Decimal To Binary !',0AH,0DH,0AH,0DH,'$' 
string2 DB 0AH,0DH,'Decimal:$' 
INPUT DB 20H 
DB 100 DUP('$') 
RESULT DB 0AH,0DH,'Binary :$' 
ERRINF DB 'ERROR! Please check and input AGAIN!',0AH,0DH,0AH,0DH,'$' 
INFO  DB '================================',0AH,0D 
      DB '  Convert Decimal To Binary !   ',0AH,0DH 
  DB '================================',0AH,0DH,'$' 
DATA ENDS 

STACK SEGMENT 
DB 100 DUP(0) 
STACK ENDS 

CODE SEGMENT 
ASSUME CS:CODE,DS:DATA,SS:STACK 
START: 
MOV AX,STACK 
MOV SS,AX 
MOV AX,DATA 
MOV DS,AX 
MOV DX,OFFSET INFO 
MOV AH,09H 
INT 21H 
MOV DX,OFFSET Sno 
INT 21H 
MOV BX,0 
SCAN: 
    mov dx, offset string2 
    mov ah, 09H 
    int 21H 
    mov dx, offset INPUT 
    mov ah, 0AH 
    int 21H 
     
    mov bx,offset INPUT+1 
    mov cx,[bx]       
    mov ch,0 
    mov dx, offset INPUT+2 
    ;;;;;;;;; 检查退出逻辑
    mov al,[bx+1] 
    cmp al,'q' 
    je  exit 
    cmp al,'Q' 
    je  exit 
    ;;;;;;;;; 执行主程序
    call newlne 
    call Binary 
    ;打印提示信息
    push ax 
    mov dx, offset RESULT 
    mov ah, 09H 
    int 21H 
    pop ax 
    ;显示二进制
    call DispB 
    jmp SCAN 
exit: 
    mov ah, 4cH 
    int 21H 
    int 21H 
Binary proc 
;;;;;;;;;;;;;;;;;;;;;;;;;;;; 
;  10 进制转二进制子程序
;   ax: 返回的8 位二进制数
;   dx：ASCII 形式的 10 进制字符串位置
;   cx: 10 进制字符串长度
;;;;;;;;;;;;;;;;;;;;;;;;;;;; 
    push bx 
    push cx 
    push dx ;保护现场
    push si 
    push dx 
    mov bx,0 
    mov si,dx 
    mov ah, 0 
    mov al,[si] 
    sub ax,30H 
    cmp cx,1H 
    je  BinEnd 
    mov dx,10 
    dec cx 
Binlop: 
    inc si 
    mov dx,10 
    mul dx 
    mov bl,[si] 
    sub bl,30H 
    cmp bl,9 
    ja  BinErr 
    add ax,bx 
    loop Binlop 
    jmp BinEnd 
BinErr: 
    mov dx, offset ERRINF 
    call newlne 
    pop dx 
    call CNTNUM 
    call newlne 
    mov ah, 09H 
    int 21H 
BinEnd: 
    pop si 
    pop dx 
    pop cx 
    pop bx 
    ret 
Binary endp 
CNTNUM proc
    push ax 
    push bx 
    push cx 
    push dx 
    mov si, dx 
    mov ax,0 
CHECK: 
    mov bl,[si] 
    inc si 
    cmp bl,30H 
    jb  NOTNUM 
    cmp bl,39H 
    ja  NOTNUM 
    inc ax 
NOTNUM: 
    loop CHECK 
    add ax,30H 
    mov dx,ax 
    mov ah,02H 
    int 21h 
    pop dx 
    pop cx 
    pop bx 
    pop ax 
    ret     
CNTNUM endp 
DispB proc    
;;;;;;;;;;;;;;;;;;;;;;; 
;   二进制显示子程序
;   ax: 待显示的二进制数据
;;;;;;;;;;;;;;;;;;;;;;;;;;;;   
push ax 
    push bx 
    push cx 
    push dx 
    mov bx,ax 
    mov cx,16 
s: mov dl,'0' 
rol bx,1 
jnc s1 
mov dl,'1' 
s1: mov ah,02h 
int 21h 
loop s 
    call newlne 
    pop dx 
    pop cx 
    pop bx 
    pop ax 
ret 
DispB endp 
newlne proc 
push ax 
push dx 
mov ah,02H 
mov dl,0AH 
int 21H 
mov dl,0DH 
int 21H 
pop dx 
pop ax 
ret 
newlne endp 
CODE ENDS 
end START