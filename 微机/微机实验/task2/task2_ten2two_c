ASSUME SS:_STACK,DS:_DATA,CS:_CODE

_STACK SEGMENT STACK
DW 500 DUP(?)
_STACK ENDS

_DATA SEGMENT
BUFFER   DB 30 DUP(0)
ERROR_TEXT      DB 0DH,0AH,'The input form is wrong!',0DH,0AH,'$'
TEXT     DB  0DH,0AH,'$'
PLEASE    DB  0DH,0AH,'please input:',0DH,0AH,'$'
EXIT      DB  0DH,0AH,'You have exit successful!',0DH,0AH,'$'
_DATA ENDS 

_CODE SEGMENT
error:
MOV AH,09H
MOV DX,OFFSET ERROR_TEXT
INT 21H
jmp WELCOME

kongge:
PUSH DX
PUSH AX
MOV DL,20H
MOV AH,02H
INT 21h
POP AX
POP DX
RET

HUICHE:
PUSH DX
PUSH AX
MOV AH,09H
MOV DX,OFFSET TEXT
INT 21H
POP AX
POP DX
RET

start:
MOV AX,_DATA 
MOV DS,AX

WELCOME:
MOV AH,09H
MOV DX,OFFSET PLEASE
INT 21H
MOV DI,OFFSET BUFFER
INC DI
MOV CX,0H

input:
MOV AH,01H
INT 21H

CMP AL,0DH
JE TRANSFORM
CMP AL,'Q'
JE FINAL
CMP AL,'q'
JE FINAL
CMP AL,'0'
JB ERROR
CMP AL,'9'
JA ERROR
CMP CX,5
JAE ERROR

MOV DS:[DI],AL
INC DI
INC CX
JMP INPUT

OU:
DEC CX
MOV DI,OFFSET BUFFER
INC DI
JMP NEXT

JI:
MOV DI,OFFSET BUFFER
MOV AX,30H
MOV DS:[DI],AX
JMP NEXT

TRANSFORM:
CMP CX,0
JE ERROR
CALL HUICHE
MOV AX,CX
AND AL,1
CMP AL,0
JE OU
JNE JI

NEXT:
MOV AX,DS:[DI]
SUB AX,30H

LEAP:
mov bl,10
MUL BL

DEC CX
INC DI
ADD AX,DS:[DI]
SUB AX,30H

MOV DL,AL
MOV AH,02H
INT 21h

CMP CX,0H
je WELCOME
JNE LEAP


FINAL:
MOV AH,09H
MOV DX,OFFSET exit
INT 21H
_CODE ENDS
END START